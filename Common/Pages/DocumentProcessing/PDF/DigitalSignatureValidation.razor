@page "/pdf/validation-signature-pdf"
@inject Microsoft.JSInterop.IJSRuntime JS
@using System.IO
@using Syncfusion.Blazor.Buttons
@inject HttpClient Http
@*Hidden:Lines*@
@inherits SampleBaseComponent
@using BlazorDemos.Data.FileFormats.PDF

@*End:Hidden*@
@*Hidden:Lines*@
@inject NavigationManager NavigationManager


@*End:Hidden*@

<SampleDescription>
    <p style="font-size:16px">This sample demonstrates how to validate the digital signatures in existing PDF document.</p>
</SampleDescription>
<div class="control-section">
    <p style="font-size:16px"> Click the button to validate the digital signature by using Essential PDF. </p>
    <div class="button-section">
        <div id="button-control">
            <div class="row">
                <div>
                    <SfButton @onclick="DigitalSignatureValidationButton">Validate Signature</SfButton>                   
                </div>
            </div>
        </div>
    </div>
    <div style="margin-top: 10px">      
        <textarea name="skills" cols="155" rows="15" readonly="readonly">@response</textarea>
    </div>
</div>
<style>
    .radio-control {
        margin: 0 0 5% 0;
    }

    .control-section .row {
        margin: 10px 0;
    }
</style>

@code
{
    //Hidden:Lines
    

    
    string? response = null;
    //End:Hidden
    /// <summary>
    /// Create and download the simple PDF document
    ///<summary>
    protected async Task DigitalSignatureValidationButton(MouseEventArgs args)
    {
        Dictionary<string, MemoryStream> fileData = new Dictionary<string, MemoryStream>();
        string fileDataPath = NavigationManager.BaseUri + SampleService?.WebAssetsPath;
        byte[] data = await Http.GetByteArrayAsync(fileDataPath + "data/pdf/digital-signature.pdf");
        fileData.Add("digitalSignature.pdf", new MemoryStream(data));        
        DigitalSignatureValidationPdfService service = new DigitalSignatureValidationPdfService(fileData);
        response =  service.DigitalSignatureValidation();        
    }
}
