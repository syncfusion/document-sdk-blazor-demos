@page "/pdf/pdf-to-pdfa"
@inject Microsoft.JSInterop.IJSRuntime JS
@using System.IO
@using Syncfusion.Blazor.Buttons
@inject HttpClient Http
@*Hidden:Lines*@
@inherits SampleBaseComponent

@using BlazorDemos.Data.FileFormats.PDF

@*End:Hidden*@
@*Hidden:Lines*@
@inject NavigationManager NavigationManager


@*End:Hidden*@

<SampleDescription>
    <p style="font-size:16px">This sample demonstrates the conversion of PDF to PDF/A standard document using Essential PDF.</p>
</SampleDescription>
<ActionDescription>
    <p style="font-size:16px">This feature can be used for long term archiving and standardization. More information about conformance can be found in this documentation <a target='_blank' href='https://help.syncfusion.com/file-formats/pdf/working-with-pdf-conformance'  aria-label="documentation section">section.</a></p>
</ActionDescription>

<div class="control-section">
    <p style="font-size:16px">Click the button to view a PDF document generated by Essential PDF. Please note that Adobe Reader or its equivalent is required to view the resultant document. </p>

    <div class="button-section">
        <div id="button-control">
            <div class="row">               
                <div>
                    <SfButton @onclick="ViewTemplate">View Template</SfButton>&nbsp;
                    <SfButton @onclick="ConvertToPdfA">Convert To PDF/A</SfButton>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    .radio-control {
        margin: 0 0 5% 0;
    }

    .control-section .row {
        margin: 10px 0;
    }
</style>

@code {


    
    /// <summary>
    /// Create and download the simple PDF document
    ///<summary>
    protected async void ConvertToPdfA(MouseEventArgs args)
    {        
        Dictionary<string, MemoryStream> fileData = new Dictionary<string, MemoryStream>();
        string fileDataPath = NavigationManager.BaseUri + SampleService?.WebAssetsPath;
        byte[] data = await Http.GetByteArrayAsync(fileDataPath + "data/pdf/invoice-template.pdf");
        fileData.Add("InvoiceTemplate.pdf", new MemoryStream(data));
        PdfToPdfAService service = new PdfToPdfAService(fileData);
        MemoryStream documentStream = service.ConvertToPdfA();
        service.Close();
        await JS.SaveAs("PdfToPdfA.pdf", documentStream.ToArray());
    }
    /// <summary>
    /// Download the template TIFF image used on this sample.
    /// </summary>
    /// <param name="args"></param>
    protected async void ViewTemplate(MouseEventArgs args)
    {
        string fileDataPath = NavigationManager.BaseUri + SampleService?.WebAssetsPath;
        byte[] data = await Http.GetByteArrayAsync(fileDataPath + "data/pdf/invoice-template.pdf");
        await JS.SaveAs("PdfTemplate.pdf", data);
    }
}
