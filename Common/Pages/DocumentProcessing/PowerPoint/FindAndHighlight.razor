@page "/powerpoint/find-and-highlight"
@inject Microsoft.JSInterop.IJSRuntime JS
@using System.IO
@using Syncfusion.Blazor.Buttons
@inject HttpClient Http
@using BlazorDemos.Data.DocumentProcessing.PowerPoint
@*Hidden:Lines*@
@inherits SampleBaseComponent
@inject NavigationManager NavigationManager


@*End:Hidden*@

<SampleDescription>
    <p style="font-size:16px">
        This sample demonstrates how to find a specific text and highlight it in an existing PowerPoint presentation using Find functionality of .NET PowerPoint library.
    </p>
</SampleDescription>
<ActionDescription>
    <p style="font-size:16px">.NET PowerPoint library allows you to find the text in the PowerPoint presentation and then to manipulate it.</p>
    <p><ul style="font-size:16px"><li>You can find the first occurrence or all the occurrences of the text in the PowerPoint presentation.</li><li>You can find the text from specific slide, notes slide, master slide or layout slide.</li><li>You can find the text by matching case, whole word and all occurrence or first occurrence alone.</li><li>You can also find the content that spans across several lines.</li></ul></p>
    <p style="font-size:16px">More information about the Find functionality can be found in this <a href="https://help.syncfusion.com/file-formats/presentation/working-with-find-and-replace"  aria-label="documentation section">documentation</a> section.</p>
</ActionDescription>

<div class="control-section">
    @*Server:Block*@
    @{ #if !(WASM) && !WEBAPP}
    <p style="font-size:16px">Click the button to view the generated PowerPoint document or PDF file. Please note that a Microsoft PowerPoint viewer is required to view the resultant presentation document and a PDF viewer is required to view the resultant PDF.</p>
    @{ #endif }
    @*End:Server*@
    @*WebAssembly:Block*@
    @{ #if (WASM) || WEBAPP }
        <p style="font-size:16px">Click the button to view a PowerPoint presentation generated by .NET PowerPoint library. Please note that Microsoft PowerPoint viewer or its equivalent is required to view the resultant document.</p>
    @{ #endif }
    @*End:WebAssembly*@
    <table>
            <tr>
                <td colspan="4">
                      <div class="button-section">
                           <div id="button-control">
                                <div class="row">
                                     <div >
                                          <p style="font-size:16px"> Text to Highlight : product </p>
                                     </div>
                                </div>
                           </div>
                      </div>
                </td>
            </tr>
            @*Server:Block*@
            @{ #if !(WASM) && !WEBAPP }
            <tr>
                <td>
                    <h5 class="row" style="font-size:16px">Save As:</h5>
                </td>
                <td>
                    <div class="col-xs-12 col-sm-12 col-lg-1 col-md-6">
                        <SfRadioButton Label="PPTX" Name="PPTX" Value=@("PPTX") @bind-Checked="@documentType"></SfRadioButton>
                    </div>
                </td>
                <td>
                    <div class="col-xs-12 col-sm-12 col-lg-1 col-md-6">
                        <SfRadioButton Label="PDF" Name="PDF" Value=@("PDF") @bind-Checked="@documentType"></SfRadioButton>
                    </div>
                </td>
            </tr>
            @{ #endif }
            @*End:Server*@
            <tr>
                <td colspan="4">
                      <div class="button-section">
                           <div id="button-control">
                                <div class="row">
                                     <div>
                                          <SfButton @onclick="ViewTemplate">View Input Template</SfButton>&nbsp;
                                          <SfButton @onclick="GenerateDocument">Highlight</SfButton>
                                     </div>
                                </div>
                           </div>
                      </div>
                </td>
            </tr>
        </table>
</div>

<style>
    .control-section .row {
        margin: 10px 0;
    }
</style>

@code {
    MemoryStream? documentStream;
    string documentType = "PPTX";
    //Hidden:Lines
    
    Dictionary<string, MemoryStream> fileData = new Dictionary<string, MemoryStream>();
    
    //End:Hidden

    /// <summary>
    /// Create and download the Presentation or PDF document.
    /// </summary>
    public async Task GenerateDocument(MouseEventArgs args)
    {
        await LoadTemplate();
        FindAndHighlightService service = new FindAndHighlightService(fileData);
        documentStream = service.FindAndHighlightPresentation(documentType, "Highlight");
        service.Close();
        if (documentType == "PPTX")
            await JS.SaveAs("FindandHighlight.pptx", documentStream.ToArray());
@*Server:Block*@
#if !(WASM) && !WEBAPP
        else if (documentType == "PDF")
            await JS.SaveAs("FindandHighlight.pdf", documentStream.ToArray());
#endif
@*End:Server*@
    }
    /// <summary>
    /// Download the template Presentation document
    /// </summary>
    public async Task ViewTemplate(MouseEventArgs args)
    {
        await LoadTemplate();
        FindAndHighlightService service = new FindAndHighlightService(fileData);
        documentStream = service.FindAndHighlightPresentation(documentType, "View Input Template");
        service.Close();
        await JS.SaveAs("Input Template.pptx", documentStream.ToArray());
    }
    /// <summary>
    /// Load the template document
    /// </summary>
    public async Task LoadTemplate()
    {
        if (fileData != null && fileData.Count == 0 && SampleService?.WebAssetsPath != null)
        {
            string fileDataPath = NavigationManager.BaseUri + SampleService.WebAssetsPath;
            byte[] data = await Http.GetByteArrayAsync(fileDataPath + "data/powerpoint/find-and-highlight-input.pptx");
            fileData.Add("find-and-highlight-input.pptx", new MemoryStream(data));
        }
    }
}