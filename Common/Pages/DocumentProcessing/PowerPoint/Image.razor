@page "/powerpoint/image"
@inject Microsoft.JSInterop.IJSRuntime JS
@using System.IO
@using Syncfusion.Blazor.Buttons
@inject HttpClient Http
@using BlazorDemos.Data.DocumentProcessing.PowerPoint
@*Hidden:Lines*@
@inherits SampleBaseComponent
@inject NavigationManager NavigationManager


@*End:Hidden*@

<SampleDescription>
   <p style="font-size:16px">This sample demonstrates how to add and format images in PowerPoint Presentation using .NET PowerPoint Library (Presentation).</p> 
</SampleDescription>
<ActionDescription>
    <div>
    <p style="font-size:16px">The .NET PowerPoint Library (Presentation) allows you to insert images into the presentation at the desired location.</p>
    <ul style="font-size:16px">
            <li>Format images by resizing to the required size.</li>
            <li>Crop the images with desired offsets.</li>
            <li>Add alternate text to images.</li>
    </ul>
    </div>
    <br />
    <div>
        <p style="font-size:16px">More information about image support can be found in this <a href="https://help.syncfusion.com/file-formats/presentation/working-with-images"  aria-label="documentation section">documentation</a> section.</p>
    </div>
    <br /> 
</ActionDescription>

<div class="control-section">
    <p style="font-size:16px">Click the button to view a PowerPoint presentation generated by .NET PowerPoint library. Please note that Microsoft PowerPoint viewer or its equivalent is required to view the resultant document.</p>

    <div class="button-section">
        <div id="button-control">
            <div class="row">
                <div>
                    <SfButton @onclick="CreateImage">Create Presentation</SfButton>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    .control-section .row {
        margin: 10px 0;
    }
</style>

@code {
    MemoryStream? documentStream;
    
    //Hidden:Lines
    Dictionary<string, MemoryStream> fileData = new Dictionary<string, MemoryStream>();
    //End:Hidden
	
    /// <summary>
    /// Create and download the Presentation document
    /// </summary>
    public async Task CreateImage(MouseEventArgs args)
    {
        await LoadTemplate();
        ImageService imageSample = new ImageService(fileData);
        documentStream = imageSample.CreateImageSample();
        imageSample.Close();
        await JS.SaveAs("Image.pptx", documentStream.ToArray());
    }
    /// <summary>
    /// Load the template document
    /// </summary>
    public async Task LoadTemplate()
    {
        if (fileData != null && fileData.Count == 0 && SampleService?.WebAssetsPath != null)
        {
            string fileDataPath = NavigationManager.BaseUri + SampleService.WebAssetsPath;
            byte[] data = await Http.GetByteArrayAsync(fileDataPath + "images/powerpoint/about.png");
            fileData.Add("about.png", new MemoryStream(data));
            data = await Http.GetByteArrayAsync(fileDataPath + "images/powerpoint/about.svg");
            fileData.Add("about.svg", new MemoryStream(data));
            data = await Http.GetByteArrayAsync(fileDataPath + "images/powerpoint/cycle-logo.png");
            fileData.Add("cycle-logo.png", new MemoryStream(data));
        }
    }
}