@page "/powerpoint/comment"
@inject Microsoft.JSInterop.IJSRuntime JS
@using System.IO
@using Syncfusion.Blazor.Buttons
@inject HttpClient Http
@using BlazorDemos.Data.DocumentProcessing.PowerPoint
@*Hidden:Lines*@
@inherits SampleBaseComponent
@inject NavigationManager NavigationManager


@*End:Hidden*@

<SampleDescription>
   <p style="font-size:16px">This sample demonstrates how to add comments to a presentation slide.</p> 
</SampleDescription>
<ActionDescription>
   <b style="font-size:16px">Features:</b>
    <br />
    <ul style="font-size:16px">
			<li>Support for adding, replying, editing comments in a PowerPoint slide.</li>            
    </ul>
    <br />
</ActionDescription>

<div class="control-section">
    <p style="font-size:16px">Click the button to view a PowerPoint presentation generated by Essential Presentation. Please note that Microsoft PowerPoint viewer or its equivalent is required to view the resultant document.</p>

    <div class="button-section">
        <div id="button-control">
            <div class="row">
                <div>
                    <SfButton @onclick="CreateComment">Create Presentation</SfButton>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    .control-section .row {
        margin: 10px 0;
    }
</style>

@code {
    MemoryStream? documentStream;
    //Hidden:Lines
    
    Dictionary<string, MemoryStream> fileData = new Dictionary<string, MemoryStream>();
    
    //End:Hidden

    /// <summary>
    /// Create and download the Presentation document
    /// </summary>
    public async Task CreateComment(MouseEventArgs args)
    {
        await LoadTemplate();
        CommentService commentSample = new CommentService(fileData);
        documentStream = commentSample.CreateCommentSlide();
        commentSample.Close();
        await JS.SaveAs("Comment.pptx", documentStream.ToArray());
    }
    /// <summary>
    /// Load the template document
    /// </summary>
    public async Task LoadTemplate()
    {
        if (fileData != null && fileData.Count == 0 && SampleService?.WebAssetsPath != null)
        {
            string fileDataPath = NavigationManager.BaseUri + SampleService.WebAssetsPath;
            byte[] data = await Http.GetByteArrayAsync(fileDataPath + "data/powerpoint/images.pptx");
            fileData.Add("images.pptx", new MemoryStream(data));
        }
    }
}