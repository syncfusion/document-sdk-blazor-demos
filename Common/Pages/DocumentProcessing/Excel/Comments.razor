@page "/excel/Comments"
@inject Microsoft.JSInterop.IJSRuntime JS
@inject HttpClient Http
@using System.IO;

@using Syncfusion.Blazor.Buttons
@*Hidden:Lines*@

@using BlazorDemos.Data.FileFormats.XlsIO

@*End:Hidden*@
@*Hidden:Lines*@
@inherits SampleBaseComponent
@inject NavigationManager NavigationManager


@*End:Hidden*@

<SampleDescription>
    <p>The sample shows how to add notes and comments in Excel document in Blazor Excel (XlsIO) library. Explore here for more details..</p>
</SampleDescription>

<ActionDescription>
    <p>Notes were formally called comments in earlier versions of Excel and do not have a reply option. These are used for making simple notes related to the data.</p>
    <p>Comments are now threaded, and allow you to have discussions with other users about the data. It has reply option. When other users reply, it creates conversation in the workbook for the specific cells.</p>
</ActionDescription>

<div class="control-section">
    <p style="font-weight:normal">Click the "Input Template" button to view the input Excel document.</p>
    <p style="font-weight:normal">Click the "Create Document" button to view the output Excel document. Please note that the Microsoft Excel viewer or Microsoft Excel is required to view the Excel document.</p>
    @{
#if !WASM && !WEBAPP
    }
    <p style="font-weight:normal">Click the "Convert To PDF" button to view the generated PDF document.</p>
    @{
#endif
    }
    <div class="button-section">
        <div id="button-control">
            <div class="row">
                <div>
                    <SfButton @onclick="InputDocument">Input Template</SfButton>&nbsp;
                    <SfButton @onclick="ThreadedComments">Create Document</SfButton>&nbsp;
                    @{
#if !WASM && !WEBAPP
}
                    <SfButton @onclick="ThreadedCommentsToPDF">Convert To PDF</SfButton>
                    @{
#endif
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    .control-section .row {
        margin: 10px 0;
    }
</style>

@code {
    MemoryStream excelStream;
    string button = string.Empty;
    //Hidden:Lines
    

    Dictionary<string, MemoryStream> fileData = new Dictionary<string, MemoryStream>();

    
    //End:Hidden

    /// <summary>
    /// Create and download the Excel document with Comments
    /// </summary>
    public async Task ThreadedComments()
    {
        string fileDataPath = NavigationManager.BaseUri + SampleService.WebAssetsPath;
        byte[] data = await Http.GetByteArrayAsync(fileDataPath + "data/xlsio/comments-template.xlsx");
        fileData.Add("comments-template.xlsx", new MemoryStream(data));
        CommentsService service = new CommentsService(fileData);
        button = "Create Document";
        excelStream = service.Comments(button);
        service.Close();
        await JS.SaveAs("ExcelComments.xlsx", excelStream.ToArray());
    }
    public async Task InputDocument()
    {
        string fileDataPath = NavigationManager.BaseUri + SampleService.WebAssetsPath;
        byte[] data = await Http.GetByteArrayAsync(fileDataPath + "data/xlsio/comments-template.xlsx");
        fileData.Add("comments-template.xlsx", new MemoryStream(data));
        CommentsService service = new CommentsService(fileData);
        button = "Input Document";
        excelStream = service.Comments(button);
        service.Close();
        await JS.SaveAs("CommentsTemplate.xlsx", excelStream.ToArray());
    }
#if !WASM && !WEBAPP
    public async Task ThreadedCommentsToPDF()
    {
        string fileDataPath = NavigationManager.BaseUri + SampleService.WebAssetsPath;
        byte[] data = await Http.GetByteArrayAsync(fileDataPath + "data/xlsio/comments-template.xlsx");
        fileData.Add("comments-template.xlsx", new MemoryStream(data));
        CommentsService service = new CommentsService(fileData);
        button = "Convert To PDF";
        excelStream = service.Comments(button);
        service.Close();
        await JS.SaveAs("ExcelComments.pdf", excelStream.ToArray());
    }
    #endif
}