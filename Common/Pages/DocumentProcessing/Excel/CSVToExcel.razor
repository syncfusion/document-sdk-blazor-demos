@page "/excel/csv-to-excel"
@inject Microsoft.JSInterop.IJSRuntime JS
@inject HttpClient Http
@using System.IO;

@using Syncfusion.Blazor.Buttons

@*Hidden:Lines*@
@inherits SampleBaseComponent;
@using BlazorDemos.Data.FileFormats.XlsIO

@*End:Hidden*@
@*Hidden:Lines*@
@inject NavigationManager NavigationManager


@*End:Hidden*@

<SampleDescription>
  <p>This sample demonstrates how to convert CSV to Excel using XlsIO.</p>  
</SampleDescription>


<div class="control-section">
    <p style="font-weight:normal">Click the "Convert to Excel" button to convert CSV file to excel document. Please note that the Microsoft Excel or an Excel viewer is required to view the Excel document.</p>

    <div class="button-section">
        <div id="button-control">
            <div class="row">
                <div>
                    <SfButton @onclick="CSVToExcelXlsIO">Convert To Excel</SfButton>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    .control-section .row {
        margin: 10px 0;
    }
</style>

@code {
    MemoryStream excelStream;
    //Hidden:Lines
    

    Dictionary<string, MemoryStream> fileData = new Dictionary<string, MemoryStream>();

    
    //End:Hidden
    
    /// <summary>
    /// Download the Excel document created from CSV file
    /// </summary>
    public async Task CSVToExcelXlsIO()
    {
        string fileDataPath = NavigationManager.BaseUri + SampleService.WebAssetsPath;
        byte[] data = await Http.GetByteArrayAsync(fileDataPath + "data/xlsio/csv-to-excel-template.csv");
        fileData.Add("csv-to-excel-template.csv", new MemoryStream(data));
        CSVToExcelService service = new CSVToExcelService(fileData);
        excelStream = service.CSVToExcelXlsIO(fileDataPath + "data/xlsio/csv-to-excel-template.csv");
        service.Close();
        await JS.SaveAs("CSVToExcel.xlsx", excelStream.ToArray());
    }
}